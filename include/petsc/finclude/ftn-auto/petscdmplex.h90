      subroutine DMPlexCreateProcessSF(a,b,c,d,z)
       DM a ! DM
       PetscSF b ! PetscSF
       IS c ! IS
       PetscSF d ! PetscSF
       integer z
       end subroutine
      subroutine DMPlexCreateCoarsePointIS(a,b,z)
       DM a ! DM
       IS b ! IS
       integer z
       end subroutine
      subroutine DMPlexSetRefinementUniform(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexGetRefinementUniform(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexSetRefinementLimit(a,b,z)
       DM a ! DM
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine DMPlexGetRefinementLimit(a,b,z)
       DM a ! DM
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine DMPlexMarkBoundaryFaces(a,b,z)
       DM a ! DM
       DMLabel b ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexLabelComplete(a,b,z)
       DM a ! DM
       DMLabel b ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexLabelAddCells(a,b,z)
       DM a ! DM
       DMLabel b ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexLabelCohesiveComplete(a,b,c,d,e,z)
       DM a ! DM
       DMLabel b ! DMLabel
       DMLabel c ! DMLabel
       PetscBool d ! PetscBool
       DM e ! DM
       integer z
       end subroutine
      subroutine DMPlexCreateSubmesh(a,b,c,d,z)
       DM a ! DM
       DMLabel b ! DMLabel
       PetscInt c ! PetscInt
       DM d ! DM
       integer z
       end subroutine
      subroutine DMPlexGetSubpointMap(a,b,z)
       DM a ! DM
       DMLabel b ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexCreateSubpointIS(a,b,z)
       DM a ! DM
       IS b ! IS
       integer z
       end subroutine
      subroutine DMPlexGetPointLocal(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexPointLocalRead(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       PetscVoid d ! void
       integer z
       end subroutine
      subroutine DMPlexPointLocalRef(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       PetscVoid d ! void
       integer z
       end subroutine
      subroutine DMPlexGetPointLocalField(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexPointLocalFieldRead(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscScalar d ! PetscScalar
       PetscVoid e ! void
       integer z
       end subroutine
      subroutine DMPlexPointLocalFieldRef(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscScalar d ! PetscScalar
       PetscVoid e ! void
       integer z
       end subroutine
      subroutine DMPlexGetPointGlobal(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexPointGlobalRead(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       PetscVoid d ! void
       integer z
       end subroutine
      subroutine DMPlexPointGlobalRef(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       PetscVoid d ! void
       integer z
       end subroutine
      subroutine DMPlexGetPointGlobalField(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexPointGlobalFieldRead(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscScalar d ! PetscScalar
       PetscVoid e ! void
       integer z
       end subroutine
      subroutine DMPlexPointGlobalFieldRef(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscScalar d ! PetscScalar
       PetscVoid e ! void
       integer z
       end subroutine
      subroutine PetscPartitionerSetFromOptions(a,z)
       PetscPartitioner a ! PetscPartitioner
       integer z
       end subroutine
      subroutine PetscPartitionerDestroy(a,z)
       PetscPartitioner a ! PetscPartitioner
       integer z
       end subroutine
      subroutine PetscPartitionerCreate(a,b,z)
       integer a ! MPI_Comm
       PetscPartitioner b ! PetscPartitioner
       integer z
       end subroutine
      subroutine PetscPartitionerPartition(a,b,c,d,z)
       PetscPartitioner a ! PetscPartitioner
       DM b ! DM
       PetscSection c ! PetscSection
       IS d ! IS
       integer z
       end subroutine
      subroutine DMPlexGetPartitioner(a,b,z)
       DM a ! DM
       PetscPartitioner b ! PetscPartitioner
       integer z
       end subroutine
      subroutine DMPlexSetPartitioner(a,b,z)
       DM a ! DM
       PetscPartitioner b ! PetscPartitioner
       integer z
       end subroutine
      subroutine DMPlexPartitionLabelClosure(a,b,z)
       DM a ! DM
       DMLabel b ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexPartitionLabelAdjacency(a,b,z)
       DM a ! DM
       DMLabel b ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexPartitionLabelInvert(a,b,c,d,z)
       DM a ! DM
       DMLabel b ! DMLabel
       PetscSF c ! PetscSF
       DMLabel d ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexPartitionLabelCreateSF(a,b,c,z)
       DM a ! DM
       DMLabel b ! DMLabel
       PetscSF c ! PetscSF
       integer z
       end subroutine
      subroutine DMPlexGetNumBoundary(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCreateClosureIndex(a,b,z)
       DM a ! DM
       PetscSection b ! PetscSection
       integer z
       end subroutine
      subroutine DMPlexCreateGmsh(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscViewer b ! PetscViewer
       PetscBool c ! PetscBool
       DM d ! DM
       integer z
       end subroutine
      subroutine DMLabelHasValue(a,b,c,z)
       DMLabel a ! DMLabel
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine DMLabelHasPoint(a,b,c,z)
       DMLabel a ! DMLabel
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine DMLabelStratumHasPoint(a,b,c,d,z)
       DMLabel a ! DMLabel
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine DMLabelGetValue(a,b,c,z)
       DMLabel a ! DMLabel
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMLabelSetValue(a,b,c,z)
       DMLabel a ! DMLabel
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMLabelClearValue(a,b,c,z)
       DMLabel a ! DMLabel
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMLabelInsertIS(a,b,c,z)
       DMLabel a ! DMLabel
       IS b ! IS
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetNumLabels(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCreateCGNS(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
       integer z
       end subroutine
      subroutine DMPlexGetOrdering(a,b,c,z)
       DM a ! DM
       MatOrderingType b ! MatOrderingType
       IS c ! IS
       integer z
       end subroutine
      subroutine DMPlexPermute(a,b,c,z)
       DM a ! DM
       IS b ! IS
       DM c ! DM
       integer z
       end subroutine
      subroutine DMPlexSetAdjacencyUseCone(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexGetAdjacencyUseCone(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexSetAdjacencyUseClosure(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexGetAdjacencyUseClosure(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexSetAdjacencyUseAnchors(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexGetAdjacencyUseAnchors(a,b,z)
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMPlexGetAdjacency(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCreateTwoSidedProcessSF(a,b,c,d,e,f,g,h,z)
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSection c ! PetscSection
       IS d ! IS
       PetscSection e ! PetscSection
       IS f ! IS
       IS g ! IS
       PetscSF h ! PetscSF
       integer z
       end subroutine
      subroutine DMPlexDistributeOwnership(a,b,c,d,e,z)
       DM a ! DM
       PetscSection b ! PetscSection
       IS c ! IS
       PetscSection d ! PetscSection
       IS e ! IS
       integer z
       end subroutine
      subroutine DMPlexStratifyMigrationSF(a,b,c,z)
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSF c ! PetscSF
       integer z
       end subroutine
      subroutine DMPlexDistributeField(a,b,c,d,e,f,z)
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSection c ! PetscSection
       Vec d ! Vec
       PetscSection e ! PetscSection
       Vec f ! Vec
       integer z
       end subroutine
      subroutine DMPlexDistributeFieldIS(a,b,c,d,e,f,z)
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSection c ! PetscSection
       IS d ! IS
       PetscSection e ! PetscSection
       IS f ! IS
       integer z
       end subroutine
      subroutine DMPlexDistributeData(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSection c ! PetscSection
       integer d ! MPI_Datatype
       PetscVoid e ! void
       PetscSection f ! PetscSection
       PetscVoid g ! void
       integer z
       end subroutine
      subroutine DMPlexReverseCell(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexOrient(a,z)
       DM a ! DM
       integer z
       end subroutine
      subroutine DMPlexSetReferenceTree(a,b,z)
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexGetReferenceTree(a,b,z)
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexReferenceTreeGetChildSymmetry(a,b,c,d,e,f,g,h,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       PetscInt h ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCreateDefaultReferenceTree(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
       integer z
       end subroutine
      subroutine DMPlexSetTree(a,b,c,d,z)
       DM a ! DM
       PetscSection b ! PetscSection
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetTree(a,b,c,d,e,f,z)
       DM a ! DM
       PetscSection b ! PetscSection
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscSection e ! PetscSection
       PetscInt f (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetTreeParent(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetChart(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSetChart(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetConeSize(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSetConeSize(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexAddConeSize(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSetCone(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSetConeOrientation(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetSupportSize(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSetSupportSize(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSetSupport(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetMaxSizes(a,b,c,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSymmetrize(a,z)
       DM a ! DM
       integer z
       end subroutine
      subroutine DMPlexStratify(a,z)
       DM a ! DM
       integer z
       end subroutine
      subroutine DMPlexLocalizeCoordinate(a,b,c,z)
       DM a ! DM
       PetscScalar b (*) ! PetscScalar
       PetscScalar c (*) ! PetscScalar
       integer z
       end subroutine
      subroutine DMPlexLocalizeCoordinates(a,z)
       DM a ! DM
       integer z
       end subroutine
      subroutine DMPlexGetDepthLabel(a,b,z)
       DM a ! DM
       DMLabel b ! DMLabel
       integer z
       end subroutine
      subroutine DMPlexGetDepth(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetDepthStratum(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetHeightStratum(a,b,c,d,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetHybridBounds(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexSetHybridBounds(a,b,c,d,e,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCheckSymmetry(a,z)
       DM a ! DM
       integer z
       end subroutine
      subroutine DMPlexCheckSkeleton(a,b,c,z)
       DM a ! DM
       PetscBool b ! PetscBool
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCheckFaces(a,b,c,z)
       DM a ! DM
       PetscBool b ! PetscBool
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetCoarseDM(a,b,z)
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexSetCoarseDM(a,b,z)
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexGetAnchors(a,b,c,z)
       DM a ! DM
       PetscSection b ! PetscSection
       IS c ! IS
       integer z
       end subroutine
      subroutine DMPlexSetAnchors(a,b,c,z)
       DM a ! DM
       PetscSection b ! PetscSection
       IS c ! IS
       integer z
       end subroutine
      subroutine DMPlexSetMaxProjectionHeight(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexGetMaxProjectionHeight(a,b,z)
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexComputeIntegralFEM(a,b,c,d,z)
       DM a ! DM
       Vec b ! Vec
       PetscReal c ! PetscReal
       PetscVoid d ! void
       integer z
       end subroutine
      subroutine DMPlexComputeInterpolatorFEM(a,b,c,d,z)
       DM a ! DM
       DM b ! DM
       Mat c ! Mat
       PetscVoid d ! void
       integer z
       end subroutine
      subroutine DMPlexCreateExodus(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
       integer z
       end subroutine
      subroutine DMPlexTriangleSetOptions(a,b,z)
       DM a ! DM
       character b ! char
       integer z
       end subroutine
      subroutine DMPlexTetgenSetOptions(a,b,z)
       DM a ! DM
       character b ! char
       integer z
       end subroutine
      subroutine DMPlexCopyCoordinates(a,b,z)
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexCopyLabels(a,b,z)
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexUninterpolate(a,b,z)
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexCreateDoublet(a,b,c,d,e,f,g,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       PetscBool d ! PetscBool
       PetscBool e ! PetscBool
       PetscReal f ! PetscReal
       DM g ! DM
       integer z
       end subroutine
      subroutine DMPlexCreateSquareBoundary(a,b,c,d,z)
       DM a ! DM
       PetscReal b (*) ! PetscReal
       PetscReal c (*) ! PetscReal
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCreateCubeBoundary(a,b,c,d,z)
       DM a ! DM
       PetscReal b (*) ! PetscReal
       PetscReal c (*) ! PetscReal
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine DMPlexCreateSquareMesh(a,b,c,d,e,f,z)
       DM a ! DM
       PetscReal b (*) ! PetscReal
       PetscReal c (*) ! PetscReal
       PetscInt d (*) ! PetscInt
       DMBoundaryType e ! DMBoundaryType
       DMBoundaryType f ! DMBoundaryType
       integer z
       end subroutine
      subroutine DMPlexCreateBoxMesh(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
       integer z
       end subroutine
      subroutine DMPlexCreateHexBoxMesh(a,b,c,d,e,f,g,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       DMBoundaryType d ! DMBoundaryType
       DMBoundaryType e ! DMBoundaryType
       DMBoundaryType f ! DMBoundaryType
       DM g ! DM
       integer z
       end subroutine
      subroutine DMPlexCreate(a,b,z)
       integer a ! MPI_Comm
       DM b ! DM
       integer z
       end subroutine
      subroutine DMPlexCreateFromDAG(a,b,c,d,e,f,g,z)
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscInt f (*) ! PetscInt
       PetscScalar g (*) ! PetscScalar
       integer z
       end subroutine
      subroutine DMPlexCreateReferenceCell(a,b,c,d,z)
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
       integer z
       end subroutine
      subroutine DMPlexComputeGeometryFVM(a,b,c,z)
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine DMPlexComputeGradientFVM(a,b,c,d,e,z)
       DM a ! DM
       PetscFV b ! PetscFV
       Vec c ! Vec
       Vec d ! Vec
       DM e ! DM
       integer z
       end subroutine
